BNB_BNB_SYMBOL = 'BNB.BNB'
BNB_BUSD_SYMBOL = 'BNB.BUSD-BD1'
BNB_BUSD_TEST_SYMBOL = 'BNB.BUSD-BAF'

BNB_BTCB_SYMBOL = 'BNB.BTCB-1DE'
BNB_BTCB_TEST_SYMBOL = 'BNB.BTCB-101'
BTC_SYMBOL = 'BTC.BTC'

BNB_ETHB_SYMBOL = 'BNB.ETH-1C9'
BNB_ETHB_TEST_SYMBOL = 'BNB.ETH-D5B'

BNB_RUNE_SYMBOL = 'BNB.RUNE-B1A'
BNB_RUNE_TEST_SYMBOL = 'BNB.RUNE-67C'
NATIVE_RUNE_SYMBOL = 'THOR.RUNE'
RUNE_SYMBOL_DET = 'RUNE-DET'

BNB_USDT_SYMBOL = 'BNB.USDT-6D8'
ETH_USDT_TEST_SYMBOL = 'ETH.USDT-0X62E273709DA575835C7F6AEF4A31140CA5B1D190'

STABLE_COIN_POOLS = (
    BNB_BUSD_SYMBOL, BNB_BUSD_TEST_SYMBOL,
    BNB_USDT_SYMBOL,
    ETH_USDT_TEST_SYMBOL
)

RUNE_SYMBOLS = (
    BNB_RUNE_SYMBOL,
    BNB_RUNE_TEST_SYMBOL,
    NATIVE_RUNE_SYMBOL,
)


def is_rune(symbol):
    return symbol in RUNE_SYMBOLS


def is_stable_coin(pool):
    return pool in STABLE_COIN_POOLS


class NetworkIdents:
    TESTNET_MULTICHAIN = 'testnet-multi'
    CHAOSNET_MULTICHAIN = 'chaosnet-multi'
    CHAOSNET_BEP2CHAIN = 'chaosnet-bep2'


THOR_DIVIDER = 100_000_000.0
THOR_DIVIDER_INV = 1.0 / THOR_DIVIDER
