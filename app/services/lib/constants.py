BNB_SYMBOL = 'BNB.BNB'
BUSD_SYMBOL = 'BNB.BUSD-BD1'
BUSD_TEST_SYMBOL = 'BNB.BUSD-BAF'

USDT_SYMBOL = 'BNB.USDT-6D8'

BTCB_SYMBOL = 'BNB.BTCB-1DE'
BTCB_TEST_SYMBOL = 'BNB.BTCB-101'
BTC_SYMBOL = 'BTC.BTC'

ETHB_SYMBOL = 'BNB.ETH-1C9'
ETHB_TEST_SYMBOL = 'BNB.ETH-D5B'

RUNE_SYMBOL_BEP2 = 'BNB.RUNE-B1A'
RUNE_SYMBOL_BEP2_TEST = 'BNB.RUNE-67C'
RUNE_SYMBOL_NATIVE = 'THOR.RUNE'
RUNE_SYMBOL_DET = 'RUNE-DET'

USDT_BNB_SYMBOL = 'BNB.USDT-6D8'
USDT_ETH_SYMBOL_TEST = 'ETH.USDT-0X62E273709DA575835C7F6AEF4A31140CA5B1D190'

STABLE_COIN_POOLS = (
    BUSD_SYMBOL, BUSD_TEST_SYMBOL,
    USDT_BNB_SYMBOL,
    USDT_ETH_SYMBOL_TEST
)

RUNE_SYMBOLS = (
    RUNE_SYMBOL_BEP2,
    RUNE_SYMBOL_BEP2_TEST,
    RUNE_SYMBOL_NATIVE,
)


def is_rune(symbol):
    return symbol in RUNE_SYMBOLS


def is_stable_coin(pool):
    return pool in STABLE_COIN_POOLS


class NetworkIdents:
    TESTNET_MULTICHAIN = 'testnet-multi'
    CHAOSNET_MULTICHAIN = 'chaosnet-multi'
    CHAOSNET_BEP2CHAIN = 'chaosnet-bep2'


THOR_DIVIDER = 100_000_000.0
THOR_DIVIDER_INV = 1.0 / THOR_DIVIDER
