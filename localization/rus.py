from typing import Dict

from localization.base import BaseLocalization, pretty_money, link, short_address
from services.models.cap_info import ThorInfo
from services.models.tx import StakeTx, short_asset_name, StakePoolStats


class RussianLocalization(BaseLocalization):
    # ---- WELCOME ----

    def help(self):
        return f"–≠—Ç–æ—Ç –±–æ—Ç —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ –∫—Ä—É–ø–Ω—ã—Ö –¥–≤–∏–∂–µ–Ω–∏—è—Ö —Å —Å–µ—Ç–∏ {link('https://thorchain.org/', 'THORChain')}.\n" \
               f"–ö–æ–º–∞–Ω–¥—ã:\n" \
               f"/help ‚Äì —ç—Ç–∞ –ø–æ–º–æ—â—å\n" \
               f"/start ‚Äì –∑–∞–ø—É—Å–∫ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞\n" \
               f"/cap ‚Äì —Ç–µ–∫—É—â–∏–π –∫–∞–ø –¥–ª—è —Å—Ç–µ–π–∫–∞ –≤ –ø—É–ª–∞—Ö Chaosnet\n" \
               f"/price ‚Äì —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ Rune.\n" \
               f"<b>–í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ @thorchain_alert.</b>"

    def welcome_message(self, info: ThorInfo):
        return f"–ü—Ä–∏–≤–µ—Ç! <b>{info.stacked:.0f}</b> –º–æ–Ω–µ—Ç –∏–∑ <b>{info.cap:.0f}</b> —Å–µ–π—á–∞—Å –∑–∞—Å—Ç–µ–π–∫–∞–Ω—ã.\n" \
               f"–¶–µ–Ω–∞ $RUNE —Å–µ–π—á–∞—Å <code>{info.price:.3f} BUSD</code>.\n" \
               f"–ë–æ—Ç —Ç–µ–ø–µ—Ä—å —É–≤–µ–¥–æ–º–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ: @thorchain_alert"

    # ----- CAP ------
    def notification_cap_change_text(self, old: ThorInfo, new: ThorInfo):
        verb = "–ø–æ–¥—Ä–æ—Å" if old.cap < new.cap else "—É–ø–∞–ª"
        call = "–ê–π-–¥–∞ –∑–∞—Å—Ç–µ–π–∫–∞–µ–º!\n" if new.cap > old.cap else ''
        message = f'<b>–ö–∞–ø {verb} —Å {old.cap:.0f} –¥–æ {new.cap:.0f}!</b>\n' \
                  f'–°–µ–π—á–∞—Å –∑–∞—Å—Ç–µ–π–∫–∞–Ω–æ <b>{new.stacked:.0f}</b> $RUNE.\n' \
                  f'–¶–µ–Ω–∞ $RUNE –≤ –ø—É–ª–µ <code>{new.price:.3f} BUSD</code>.\n' \
                  f'{call}' \
                  f'https://chaosnet.bepswap.com/'
        return message

    # ------ PRICE -------
    def price_message(self, info: ThorInfo):
        return f"–ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞ $RUNE: <code>{info.price:.3f} BUSD</code>."

    # ------ TXS -------
    def tx_text(self, tx: StakeTx, rune_per_dollar: float, pool: StakePoolStats):
        msg = ''
        if tx.type == 'stake':
            msg += f'üê≥ <b>–ö–∏—Ç –¥–æ–±–∞–≤–∏–ª –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏</b> üü¢\n'
        elif tx.type == 'unstake':
            msg += f'üê≥ <b>–ö–∏—Ç –≤—ã–≤–µ–ª –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å</b> üî¥\n'

        rp, ap = tx.symmetry_rune_vs_asset()
        msg += f"<b>{pretty_money(tx.rune_amount)} ·ö±une</b> ({rp:.0f}%) ‚ÜîÔ∏è " \
               f"<b>{pretty_money(tx.asset_amount)} {short_asset_name(tx.pool)}</b> ({ap:.0f}%)\n"

        total_usd_volume = tx.full_rune / rune_per_dollar if rune_per_dollar != 0 else 0.0
        msg += f"–í—Å–µ–≥–æ: <code>${pretty_money(total_usd_volume)}</code>\n"

        info = link(f'https://viewblock.io/thorchain/address/{tx.address}', short_address(tx.address))
        msg += f"–°–º–æ—Ç—Ä–µ—Ç—å: {info}"

        return msg
