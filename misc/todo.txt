1) Broadcast task for all

queue of messages -> forever loop with "anti-spam" delays

2) Track large RUne movements over Binance chain

3) ?

4) ?

5) ?

6) thornode consensus check (versions, block height, accounts)

+ add API for thor node request with auto blacklist if error or time out + retries

7) ToDo: integrate with runestake.info

IN PROGRESS

Kai: This bot is very cool.

Would be great if the monitoring bot could be customisable so you could get a feed of transactions based on preferences and thresholds.

I'm happy to throw you and Bigboss a bounty if you want to work together. Imagine the bot could spit out data from runestake.info

- total gain / loss
- rune gain / loss
- asset gain / loss
- redeemable value
- LP Vs. HODL

and later even dynamically generated charts. the more you guys work together the more value delivered

8) Add favorite BNB addresses - monitor in/out tx

9) Not sure. There are detailed amounts in the Treasury Reports each month (like https://medium.com/thorchain/monthly-treasury-report-september-74b13c27aa7f). Cant find any adresses this quick tho. Will have to dig deeper.

the address that adds the reserve is

bnb1axqc2gan462z6npw3c33srp4950mr5x28uc6wu

10) Use aiogram state machine

to manage Preferences and favorite addresses

12) price graph + deterministic price graph

13) take mimir from thorchain http://IP:1317/thorchain/mimir bypassing Chaosnet

14) admin commands, add admin chat id to cfg,

commands:
1. get user count
2. logs
3. reset state?
4. restart
5. send to all

15) bot can edit commands like this:

@dp.message_handler(commands="set_commands", state="*")
async def cmd_set_commands(message: types.Message):
    if message.from_user.id == 1234567:  # Подставьте сюда свой Telegram ID
        commands = [types.BotCommand(command="/drinks", description="Заказать напитки"),
                    types.BotCommand(command="/food", description="Заказать блюда")]
        await bot.set_my_commands(commands)
        await message.answer("Команды настроены.")

16) for callback alert use await bot.answer_callback_query()

----

From now on, notifications of large liquidity transactions will be sent only if the transaction volume is more than 5 times the median of the last 50 transactions.

