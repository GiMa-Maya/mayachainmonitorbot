T A S K S :
------------------------------------------------------------------------

ToDo: integrate with runestake.info

IN PROGRESS

Kai: This bot is very cool.

Would be great if the monitoring bot could be customisable so you could get a feed of transactions based on preferences and thresholds.

I'm happy to throw you and Bigboss a bounty if you want to work together. Imagine the bot could spit out data from runestake.info

- total gain / loss
- rune gain / loss
- asset gain / loss
- redeemable value
- LP Vs. HODL

and later even dynamically generated charts. the more you guys work together the more value delivered

Me: add sharable stake reports!

------------------------------------------------------------------------

ToDo: price graph + deterministic price graph

------------------------------------------------------------------------

ToDo: admin commands, add admin chat id to cfg,

commands:
1. get user count
2. logs
3. reset any states
4. restart bot
5. broadcast a message to all bot users

------------------------------------------------------------------------

ToDo: OPTIONAL TODOs or IDEAS:

6) thornode consensus check (versions, block height, accounts)

+ add API for thor node request with auto blacklist if error or time out + retries

8) Add favorite BNB addresses - monitor in/out tx

9) Not sure. There are detailed amounts in the Treasury Reports each month (like https://medium.com/thorchain/monthly-treasury-report-september-74b13c27aa7f). Cant find any adresses this quick tho. Will have to dig deeper.

the address that adds the reserve is

bnb1axqc2gan462z6npw3c33srp4950mr5x28uc6wu

10) ?

13) take mimir from thorchain http://IP:1317/thorchain/mimir bypassing Chaosnet

15) bot can edit commands like this:

@dp.message_handler(commands="set_commands", state="*")
async def cmd_set_commands(message: types.Message):
    if message.from_user.id == 1234567:  # Подставьте сюда свой Telegram ID
        commands = [types.BotCommand(command="/drinks", description="Заказать напитки"),
                    types.BotCommand(command="/food", description="Заказать блюда")]
        await bot.set_my_commands(commands)
        await message.answer("Команды настроены.")

16) for callback alert use await bot.answer_callback_query()

----

